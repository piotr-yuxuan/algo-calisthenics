#+TITLE:Longest Palindromic Substring
#+PROPERTY: header-args :tangle problem_4_longest_palindromic_substring.py
#+STARTUP: latexpreview
#+URL:

#+BEGIN_QUOTE
Given a string =s=, return the longest substring of =s= that is a
palindrome.

A palindrome is a string that reads the same forward and backward.

If there are multiple palindromic substrings that have the same
length, return any one of them.
#+END_QUOTE

* Initial considerations

* Chosen solution

As of now the best way I can think ofâ€¦

- Time complexity (average / best / worst): $\mathcal{O}(n)$
- Space complexity (average / best / worst): $\mathcal{O}(1)$
