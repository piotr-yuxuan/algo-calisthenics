#+TITLE:Coin Change
#+PROPERTY: header-args :tangle problem_7_coin_change.py
#+STARTUP: latexpreview
#+URL: https://chatgpt.com/c/679cda0e-3620-800e-8fc2-5f286a6d97ee

#+BEGIN_QUOTE
You are given an integer array =coins= representing coins of different
denominations (e.g. 1 dollar, 5 dollars, etc) and an integer =amount=
representing a target amount of money.

Return the fewest number of coins that you need to make up the exact
target amount. If it is impossible to make up the amount, return =-1=.

You may assume that you have an unlimited number of each coin.
#+END_QUOTE

* Initial considerations

* Chosen solution

As of now the best way I can think ofâ€¦

- Time complexity (average / best / worst): $\mathcal{O}(n)$
- Space complexity (average / best / worst): $\mathcal{O}(1)$

* Further elaboration

- What if some coins have limited availability?
- What if we also want the total number of ways to form amount?
- What if each coin has a different weight?
- What if we need the lexicographically smallest solution?
