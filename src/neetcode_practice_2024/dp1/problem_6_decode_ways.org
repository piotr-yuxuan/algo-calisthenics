#+TITLE:Decode ways
#+PROPERTY: header-args :tangle problem_6_decode_ways.py
#+STARTUP: latexpreview
#+URL: https://chatgpt.com/c/679cce3c-aca4-800e-a3ff-0edd34d78647

#+BEGIN_QUOTE
A string consisting of uppercase english characters can be encoded to
a number using the following mapping:

- 'A' -> "1"
- 'B' -> "2"
...
- 'Z' -> "26"

To decode a message, digits must be grouped and then mapped back into
letters using the reverse of the reversemapping above. There may be
multiple ways to decode a message. For example, ="1012"= can be mapped
into:

- ="JAB"= with the grouping $(10 1 2)$
- ="JL"= with the grouping $(10 12)$

The grouping $(1 01 2)$ is invalid because $01$ cannot be mapped into
a letter since it contains a leading zero.

Given a string =s= containing only digits, return the number of ways
to decode it. You can assume that the answer fits in a 32-bit integer.
#+END_QUOTE

* Initial considerations

* Chosen solution

As of now the best way I can think ofâ€¦

- Time complexity (average / best / worst): $\mathcal{O}(n)$
- Space complexity (average / best / worst): $\mathcal{O}(1)$

#+BEGIN_SRC python
#+END_SRC
