#+TITLE:Anagram groups
#+PROPERTY: header-args :tangle problem_4_anagram_groups.py
#+STARTUP: latexpreview
#+LATEX_HEADER:\newcommand\var[1]{\mathop{\textnormal{\slshape #1}}\nolimits}

#+BEGIN_QUOTE
Given an array of strings $\var{strs}$, group all anagrams together
into sublists. You may return the output in any order.

An anagram is a string that contains the exact same characters as
another string, but the order of the characters can be different.
#+END_QUOTE

* Initial considerations

* Chosen solution

As of now the best way I can think ofâ€¦

- Time complexity (average / best / worst): $\mathcal{O}(n)$
- Space complexity (average / best / worst): $\mathcal{O}(1)$

#+BEGIN_SRC python
#+END_SRC
