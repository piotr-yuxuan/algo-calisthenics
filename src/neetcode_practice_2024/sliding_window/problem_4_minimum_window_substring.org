#+TITLE:Minimum window substring
#+PROPERTY: header-args :tangle problem_4_minimum_window_substring.py
#+STARTUP: latexpreview
#+URL:

#+BEGIN_QUOTE
Given two strings =s= and =t=, return the shortest substring of =s=
such that every character in =t=, including duplicates, is present in
the substring. If such a substring does not exist, return an empty
string "".

You may assume that the correct output is always unique.
#+END_QUOTE

* Initial considerations

* Chosen solution

As of now the best way I can think ofâ€¦

- Time complexity (average / best / worst): $\mathcal{O}(n)$
- Space complexity (average / best / worst): $\mathcal{O}(1)$

#+BEGIN_SRC python
#+END_SRC
